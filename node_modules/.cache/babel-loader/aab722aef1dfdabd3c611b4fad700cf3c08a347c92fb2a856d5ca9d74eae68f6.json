{"ast":null,"code":"import _Autocomplete2 from \"element-ui/lib/theme-chalk/autocomplete.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Autocomplete from \"element-ui/lib/autocomplete\";\nimport \"core-js/modules/es.array.push.js\";\nimport { use } from 'echarts/core';\nimport axios from 'axios';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { GraphChart } from 'echarts/charts';\nimport { THEME_KEY } from 'vue-echarts';\nimport { defineComponent, h } from 'vue';\nimport companyNames from '@/assets/data/company_name.json';\n// import { getCompanyGraph } from '../api/company-graph'\n\nuse([CanvasRenderer, GraphChart]);\nexport default defineComponent({\n  name: 'SearchPage',\n  components: {\n    h,\n    Autocomplete: _Autocomplete\n  },\n  provide: {\n    [THEME_KEY]: 'dark'\n  },\n  data() {\n    return {\n      companyNameSuggest: [],\n      form: {\n        companyName: '',\n        lays: '',\n        nodes: ''\n      }\n    };\n  },\n  methods: {\n    querySearch(queryString, cb) {\n      var restaurants = this.companyNameSuggest;\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createFilter(queryString) {\n      return restaurant => {\n        return restaurant.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    loadAll() {\n      console.log([{\n        value: 'Google',\n        address: '长宁区新渔路144号'\n      }, {\n        value: 'Facebook',\n        address: '上海市长宁区淞虹路661号'\n      }, {\n        value: 'Amazon',\n        address: '上海市普陀区真北路988号创邑金沙谷6号楼113'\n      }][1].value);\n      console.log(companyNames[1].name);\n      return companyNames;\n    },\n    handleSelect(item) {\n      console.log(item);\n    },\n    async onSubmit() {\n      // const graph = await getCompanyGraph(0, 1000)\n      // console.log(graph)\n      // const companyName = this.form.companyName\n      // this.fetchCompetitors(companyName)\n      console.log(1);\n      let lays = this.form.lays;\n      if (lays === '') {\n        lays = 1;\n      }\n      let nodes = this.form.nodes;\n      if (nodes === '') {\n        nodes = 1;\n      }\n      this.$router.push('partial-graph/' + this.form.companyName + '/' + lays + '/' + nodes);\n    },\n    fetchCompetitors(companyName) {\n      axios.get(`/competitors/${companyName}`).then(response => {\n        // Handle the response from the API\n        // You can update the component's data or perform any other actions based on the response\n        console.log(response.data);\n      }).catch(error => {\n        // Handle the error if the API request fails\n        console.error(error);\n      });\n    }\n  },\n  async created() {\n    // const graph = await getCompanyGraph(0, 1000)\n    // const graph = null\n  },\n  mounted() {\n    this.companyNameSuggest = [{\n      value: 'Google',\n      address: '长宁区新渔路144号'\n    }, {\n      value: 'Facebook',\n      address: '上海市长宁区淞虹路661号'\n    }, {\n      value: 'Amazon',\n      address: '上海市普陀区真北路988号创邑金沙谷6号楼113'\n    }];\n  }\n});","map":{"version":3,"names":["use","axios","CanvasRenderer","GraphChart","THEME_KEY","defineComponent","h","companyNames","name","components","Autocomplete","_Autocomplete","provide","data","companyNameSuggest","form","companyName","lays","nodes","methods","querySearch","queryString","cb","restaurants","results","filter","createFilter","restaurant","toLowerCase","indexOf","loadAll","console","log","value","address","handleSelect","item","onSubmit","$router","push","fetchCompetitors","get","then","response","catch","error","created","mounted"],"sources":["src/components/SearchForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class = \"container-form\">\n    <el-form class=\"search-form\" :model=\"form\" label-position=\"top\">\n      <h3 class=\"title\">Search a Company</h3>\n      <el-form-item label=\"Company Name\" class=\"form-item\">\n        <el-autocomplete\n          class=\"inline-input\"\n          v-model=\"form.companyName\"\n          placeholder=\"(hardcoded autocomplete)Please enter a company name or ticker, e.g. MSFT\"\n          :fetch-suggestions=\"querySearch\"\n          :trigger-on-focus=\"false\"\n          @select=\"handleSelect\"\n        ></el-autocomplete>\n      </el-form-item>\n      <el-form-item label=\"How many layers of relationship to expand\"  class=\"form-item\">\n        <el-input\n          class=\"graphSearch\"\n          v-model=\"form.lays\"\n          placeholder=\"1\"\n          type=\"number\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"How many nodes to show per layer\"  class=\"form-item\">\n        <el-input\n          class=\"graphSearch\"\n          v-model=\"form.nodes\"\n          placeholder=\"1\"\n          type=\"number\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"onSubmit\"><b>Go!</b></el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n  </div>\n</template>\n<script>\nimport { use } from 'echarts/core'\nimport axios from 'axios'\nimport { CanvasRenderer } from 'echarts/renderers'\nimport { GraphChart } from 'echarts/charts'\nimport { Autocomplete } from 'element-ui'\nimport { THEME_KEY } from 'vue-echarts'\nimport { defineComponent, h } from 'vue'\nimport companyNames from '@/assets/data/company_name.json'\n// import { getCompanyGraph } from '../api/company-graph'\n\nuse([\n  CanvasRenderer,\n  GraphChart\n])\n\nexport default defineComponent({\n  name: 'SearchPage',\n  components: {\n    h,\n    Autocomplete\n  },\n  provide: {\n    [THEME_KEY]: 'dark'\n  },\n  data () {\n    return {\n      companyNameSuggest: [],\n      form: {\n        companyName: '',\n        lays: '',\n        nodes: ''\n      }\n    }\n  },\n  methods: {\n    querySearch (queryString, cb) {\n      var restaurants = this.companyNameSuggest\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants\n      // 调用 callback 返回建议列表的数据\n      cb(results)\n    },\n    createFilter (queryString) {\n      return (restaurant) => {\n        return (restaurant.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0)\n      }\n    },\n    loadAll () {\n      console.log([\n        { value: 'Google', address: '长宁区新渔路144号' },\n        { value: 'Facebook', address: '上海市长宁区淞虹路661号' },\n        { value: 'Amazon', address: '上海市普陀区真北路988号创邑金沙谷6号楼113' }\n      ][1].value)\n      console.log(companyNames[1].name)\n      return companyNames\n    },\n    handleSelect (item) {\n      console.log(item)\n    },\n    async onSubmit () {\n      // const graph = await getCompanyGraph(0, 1000)\n      // console.log(graph)\n      // const companyName = this.form.companyName\n      // this.fetchCompetitors(companyName)\n      console.log(1)\n      let lays = this.form.lays\n      if (lays === '') {\n        lays = 1\n      }\n      let nodes = this.form.nodes\n      if (nodes === '') {\n        nodes = 1\n      }\n      this.$router.push('partial-graph/' + this.form.companyName + '/' + lays + '/' + nodes)\n    },\n    fetchCompetitors (companyName) {\n      axios.get(`/competitors/${companyName}`)\n        .then(response => {\n        // Handle the response from the API\n        // You can update the component's data or perform any other actions based on the response\n          console.log(response.data)\n        })\n        .catch(error => {\n        // Handle the error if the API request fails\n          console.error(error)\n        })\n    }\n  },\n  async created () {\n    // const graph = await getCompanyGraph(0, 1000)\n    // const graph = null\n  },\n  mounted () {\n    this.companyNameSuggest = [\n      { value: 'Google', address: '长宁区新渔路144号' },\n      { value: 'Facebook', address: '上海市长宁区淞虹路661号' },\n      { value: 'Amazon', address: '上海市普陀区真北路988号创邑金沙谷6号楼113' }\n    ]\n  }\n})\n</script>\n\n<style scoped>\n@import 'element-ui/lib/theme-chalk/index.css';\n.container {\n  flex: 1;\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.container-form{\n  flex: 1;\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.search-form {\n  background-image: url('https://i.ibb.co/kBvCPSF/1543.jpg');\n  width: 33%;\n  border-radius: 2ch;\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.row {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n}\n\n.item1 {\n  text-align: left;\n  width: 90%;\n}\n.item3 {\n  text-align: left;\n  width: 90%;\n  margin-bottom: 0px;\n  height: 50px;\n}\n\n.title {\n  text-align: left;\n  color: black;\n}\n\n.item2 {\n  margin-top: 0px;\n  width: 90%;\n}\n.el-input .el-input__inner::placeholder {\n  font-style: italic; /* Set the placeholder text to italic */\n}\n.item4 {\n  margin-top: 40px;\n  margin-bottom: 50px;\n}\n.form-item {\n  margin-bottom: 10px;\n}\n\n.form-label {\n  display: block;\n  color: black;\n  margin-bottom: 5px;\n}\n.form-item{\n  text-align: left;\n}\n.el-autocomplete {\n  width: 100%;\n}\n</style>\n"],"mappings":";;;;AAuCA,SAAAA,GAAA;AACA,OAAAC,KAAA;AACA,SAAAC,cAAA;AACA,SAAAC,UAAA;AAEA,SAAAC,SAAA;AACA,SAAAC,eAAA,EAAAC,CAAA;AACA,OAAAC,YAAA;AACA;;AAEAP,GAAA,EACAE,cAAA,EACAC,UAAA,CACA;AAEA,eAAAE,eAAA;EACAG,IAAA;EACAC,UAAA;IACAH,CAAA;IACAI,YAAA,EAAAC;EACA;EACAC,OAAA;IACA,CAAAR,SAAA;EACA;EACAS,KAAA;IACA;MACAC,kBAAA;MACAC,IAAA;QACAC,WAAA;QACAC,IAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAAC,WAAA,EAAAC,EAAA;MACA,IAAAC,WAAA,QAAAT,kBAAA;MACA,IAAAU,OAAA,GAAAH,WAAA,GAAAE,WAAA,CAAAE,MAAA,MAAAC,YAAA,CAAAL,WAAA,KAAAE,WAAA;MACA;MACAD,EAAA,CAAAE,OAAA;IACA;IACAE,aAAAL,WAAA;MACA,OAAAM,UAAA;QACA,OAAAA,UAAA,CAAAnB,IAAA,CAAAoB,WAAA,GAAAC,OAAA,CAAAR,WAAA,CAAAO,WAAA;MACA;IACA;IACAE,QAAA;MACAC,OAAA,CAAAC,GAAA,EACA;QAAAC,KAAA;QAAAC,OAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,OAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,OAAA;MAAA,EACA,IAAAD,KAAA;MACAF,OAAA,CAAAC,GAAA,CAAAzB,YAAA,IAAAC,IAAA;MACA,OAAAD,YAAA;IACA;IACA4B,aAAAC,IAAA;MACAL,OAAA,CAAAC,GAAA,CAAAI,IAAA;IACA;IACA,MAAAC,SAAA;MACA;MACA;MACA;MACA;MACAN,OAAA,CAAAC,GAAA;MACA,IAAAf,IAAA,QAAAF,IAAA,CAAAE,IAAA;MACA,IAAAA,IAAA;QACAA,IAAA;MACA;MACA,IAAAC,KAAA,QAAAH,IAAA,CAAAG,KAAA;MACA,IAAAA,KAAA;QACAA,KAAA;MACA;MACA,KAAAoB,OAAA,CAAAC,IAAA,yBAAAxB,IAAA,CAAAC,WAAA,SAAAC,IAAA,SAAAC,KAAA;IACA;IACAsB,iBAAAxB,WAAA;MACAf,KAAA,CAAAwC,GAAA,iBAAAzB,WAAA,IACA0B,IAAA,CAAAC,QAAA;QACA;QACA;QACAZ,OAAA,CAAAC,GAAA,CAAAW,QAAA,CAAA9B,IAAA;MACA,GACA+B,KAAA,CAAAC,KAAA;QACA;QACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;MACA;IACA;EACA;EACA,MAAAC,QAAA;IACA;IACA;EAAA,CACA;EACAC,QAAA;IACA,KAAAjC,kBAAA,IACA;MAAAmB,KAAA;MAAAC,OAAA;IAAA,GACA;MAAAD,KAAA;MAAAC,OAAA;IAAA,GACA;MAAAD,KAAA;MAAAC,OAAA;IAAA,EACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}