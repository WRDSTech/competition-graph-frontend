{"ast":null,"code":"import _Autocomplete2 from \"element-ui/lib/theme-chalk/autocomplete.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Autocomplete from \"element-ui/lib/autocomplete\";\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { GraphChart } from 'echarts/charts';\nimport VChart, { THEME_KEY } from 'vue-echarts';\nimport { defineComponent, h } from 'vue';\n// import { getCompanyGraph } from '../api/company-graph'\n\nuse([CanvasRenderer, GraphChart]);\nexport default defineComponent({\n  name: 'SearchPage',\n  components: {\n    VChart,\n    h,\n    Autocomplete: _Autocomplete\n  },\n  provide: {\n    [THEME_KEY]: 'dark'\n  },\n  watch: {\n    searchTerm() {\n      const matchingNodes = this.useGraph.nodes.filter(node => node.name === this.searchTerm);\n      console.log(matchingNodes);\n      const vchart = this.$refs.vchart;\n      // const nodeData = chart.getOption().series[0].data.find(data => data.id === nodeId);\n\n      if (matchingNodes.length > 0) {\n        const nodeIds = matchingNodes.map(node => node.id);\n        vchart.dispatchAction({\n          type: 'highlight',\n          seriesIndex: 0,\n          nodeIds\n        });\n        // vchart.dispatchAction({\n        //   type: 'dataZoom',\n        //   dataZoomId: 'dataZoomX',\n        //   startValue: xValue - 50, // or any other value that centers the node\n        //   endValue: xValue + 50\n        // })\n      } else {\n        vchart.dispatchAction({\n          type: 'downplay',\n          seriesIndex: 0\n        });\n      }\n    }\n  },\n  methods: {\n    querySearch(queryString, cb) {\n      var restaurants = this.restaurants;\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createFilter(queryString) {\n      return restaurant => {\n        return restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    loadAll() {\n      return [{\n        value: '三全鲜食（北新泾店）',\n        address: '长宁区新渔路144号'\n      }, {\n        value: 'Hot honey 首尔炸鸡（仙霞路）',\n        address: '上海市长宁区淞虹路661号'\n      }, {\n        value: '新旺角茶餐厅',\n        address: '上海市普陀区真北路988号创邑金沙谷6号楼113'\n      }];\n    },\n    handleSelect(item) {\n      console.log(item);\n    }\n  },\n  data() {\n    return {\n      form: {\n        companyName: '',\n        lays: '',\n        nodes: ''\n      }\n    };\n  },\n  async created() {\n    // const graph = await getCompanyGraph(0, 1000)\n    // const graph = null\n  },\n  mounted() {\n    this.companyNameSuggest = this.loadAll();\n  }\n});","map":{"version":3,"names":["use","CanvasRenderer","GraphChart","VChart","THEME_KEY","defineComponent","h","name","components","Autocomplete","_Autocomplete","provide","watch","searchTerm","matchingNodes","useGraph","nodes","filter","node","console","log","vchart","$refs","length","nodeIds","map","id","dispatchAction","type","seriesIndex","methods","querySearch","queryString","cb","restaurants","results","createFilter","restaurant","value","toLowerCase","indexOf","loadAll","address","handleSelect","item","data","form","companyName","lays","created","mounted","companyNameSuggest"],"sources":["src/components/SearchForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class = \"container-form\">\n    <el-form class=\"search-form\" :model=\"form\" label-position=\"top\">\n      <h3 class=\"title\">Search a Company</h3>\n      <el-form-item label=\"Company Name\">\n        <el-input\n          class=\"graphSearch\"\n          v-model=\"form.companyName\"\n          placeholder=\"Please enter a company name or ticker, e.g. MSFT\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"How many layers of relationship to expand\">\n        <el-input\n          class=\"graphSearch\"\n          v-model=\"form.lays\"\n          placeholder=\"1\"\n          type=\"number\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"How many nodes to show per layer\">\n        <el-input\n          class=\"graphSearch\"\n          v-model=\"form.nodes\"\n          placeholder=\"1\"\n          type=\"number\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\"><b>Go!</b></el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n  </div>\n</template>\n<script>\nimport { use } from 'echarts/core'\nimport { CanvasRenderer } from 'echarts/renderers'\nimport { GraphChart } from 'echarts/charts'\nimport { Autocomplete } from 'element-ui'\nimport VChart, { THEME_KEY } from 'vue-echarts'\nimport { defineComponent, h } from 'vue'\n// import { getCompanyGraph } from '../api/company-graph'\n\nuse([\n  CanvasRenderer,\n  GraphChart\n])\n\nexport default defineComponent({\n  name: 'SearchPage',\n  components: {\n    VChart,\n    h,\n    Autocomplete\n  },\n  provide: {\n    [THEME_KEY]: 'dark'\n  },\n  watch: {\n    searchTerm () {\n      const matchingNodes = this.useGraph.nodes.filter(\n        node => node.name === this.searchTerm\n      )\n      console.log(matchingNodes)\n      const vchart = this.$refs.vchart\n      // const nodeData = chart.getOption().series[0].data.find(data => data.id === nodeId);\n\n      if (matchingNodes.length > 0) {\n        const nodeIds = matchingNodes.map(node => node.id)\n        vchart.dispatchAction({\n          type: 'highlight',\n          seriesIndex: 0,\n          nodeIds\n        })\n        // vchart.dispatchAction({\n        //   type: 'dataZoom',\n        //   dataZoomId: 'dataZoomX',\n        //   startValue: xValue - 50, // or any other value that centers the node\n        //   endValue: xValue + 50\n        // })\n      } else {\n        vchart.dispatchAction({\n          type: 'downplay',\n          seriesIndex: 0\n        })\n      }\n    }\n  },\n  methods: {\n    querySearch (queryString, cb) {\n      var restaurants = this.restaurants\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants\n      // 调用 callback 返回建议列表的数据\n      cb(results)\n    },\n    createFilter (queryString) {\n      return (restaurant) => {\n        return (restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0)\n      }\n    },\n    loadAll () {\n      return [\n        { value: '三全鲜食（北新泾店）', address: '长宁区新渔路144号' },\n        { value: 'Hot honey 首尔炸鸡（仙霞路）', address: '上海市长宁区淞虹路661号' },\n        { value: '新旺角茶餐厅', address: '上海市普陀区真北路988号创邑金沙谷6号楼113' }\n      ]\n    },\n    handleSelect (item) {\n      console.log(item)\n    }\n  },\n  data () {\n    return {\n      form: {\n        companyName: '',\n        lays: '',\n        nodes: ''\n      }\n    }\n  },\n  async created () {\n    // const graph = await getCompanyGraph(0, 1000)\n    // const graph = null\n  },\n  mounted () {\n    this.companyNameSuggest = this.loadAll()\n  }\n})\n</script>\n\n<style scoped>\n@import 'element-ui/lib/theme-chalk/index.css';\n.container {\n  flex: 1;\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.chart-container {\n  flex: 1;\n  margin-bottom: 5px;\n}\n\n.chart {\n  height: 75vh;\n}\n\n.graphSearch {\n  width: 100%; /* Cover the width of the container */\n  padding-bottom: 10px;\n}\n\n.search-form {\n  background-image: url('https://i.ibb.co/kBvCPSF/1543.jpg');\n  width: 33%;\n  border-radius: 2ch;\n}\n\n.row {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n}\n\n.item1 {\n  text-align: left;\n  width: 90%;\n}\n.item3 {\n  text-align: left;\n  width: 90%;\n  margin-bottom: 0px;\n  height: 50px;\n}\n\n.title {\n  text-align: left;\n  color: black;\n}\n\n.item2 {\n  margin-top: 0px;\n  width: 90%;\n}\n.el-input .el-input__inner::placeholder {\n  font-style: italic; /* Set the placeholder text to italic */\n}\n.item4 {\n  margin-top: 40px;\n  margin-bottom: 50px;\n}\n.form-item {\n  margin-bottom: 10px;\n}\n\n.form-label {\n  display: block;\n  color: black;\n  margin-bottom: 5px;\n}\n</style>\n"],"mappings":";;;AAoCA,SAAAA,GAAA;AACA,SAAAC,cAAA;AACA,SAAAC,UAAA;AAEA,OAAAC,MAAA,IAAAC,SAAA;AACA,SAAAC,eAAA,EAAAC,CAAA;AACA;;AAEAN,GAAA,EACAC,cAAA,EACAC,UAAA,CACA;AAEA,eAAAG,eAAA;EACAE,IAAA;EACAC,UAAA;IACAL,MAAA;IACAG,CAAA;IACAG,YAAA,EAAAC;EACA;EACAC,OAAA;IACA,CAAAP,SAAA;EACA;EACAQ,KAAA;IACAC,WAAA;MACA,MAAAC,aAAA,QAAAC,QAAA,CAAAC,KAAA,CAAAC,MAAA,CACAC,IAAA,IAAAA,IAAA,CAAAX,IAAA,UAAAM,UACA;MACAM,OAAA,CAAAC,GAAA,CAAAN,aAAA;MACA,MAAAO,MAAA,QAAAC,KAAA,CAAAD,MAAA;MACA;;MAEA,IAAAP,aAAA,CAAAS,MAAA;QACA,MAAAC,OAAA,GAAAV,aAAA,CAAAW,GAAA,CAAAP,IAAA,IAAAA,IAAA,CAAAQ,EAAA;QACAL,MAAA,CAAAM,cAAA;UACAC,IAAA;UACAC,WAAA;UACAL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;QACAH,MAAA,CAAAM,cAAA;UACAC,IAAA;UACAC,WAAA;QACA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAAC,WAAA,EAAAC,EAAA;MACA,IAAAC,WAAA,QAAAA,WAAA;MACA,IAAAC,OAAA,GAAAH,WAAA,GAAAE,WAAA,CAAAjB,MAAA,MAAAmB,YAAA,CAAAJ,WAAA,KAAAE,WAAA;MACA;MACAD,EAAA,CAAAE,OAAA;IACA;IACAC,aAAAJ,WAAA;MACA,OAAAK,UAAA;QACA,OAAAA,UAAA,CAAAC,KAAA,CAAAC,WAAA,GAAAC,OAAA,CAAAR,WAAA,CAAAO,WAAA;MACA;IACA;IACAE,QAAA;MACA,QACA;QAAAH,KAAA;QAAAI,OAAA;MAAA,GACA;QAAAJ,KAAA;QAAAI,OAAA;MAAA,GACA;QAAAJ,KAAA;QAAAI,OAAA;MAAA,EACA;IACA;IACAC,aAAAC,IAAA;MACAzB,OAAA,CAAAC,GAAA,CAAAwB,IAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,WAAA;QACAC,IAAA;QACAhC,KAAA;MACA;IACA;EACA;EACA,MAAAiC,QAAA;IACA;IACA;EAAA,CACA;EACAC,QAAA;IACA,KAAAC,kBAAA,QAAAV,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}